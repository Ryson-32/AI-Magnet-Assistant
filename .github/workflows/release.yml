name: Release (Draft / Pre-release)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release (e.g., v1.2.0-rc.0)'
        required: true
        default: 'v1.2.0-rc.0'

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref || inputs.tag_name }}
  cancel-in-progress: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-24.04, macos-14]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          shared-key: ai-magnet-assistant-${{ runner.os }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Windows packaging dependencies
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y nsis || Write-Host "nsis install failed, continuing"
          choco install -y wixtoolset || Write-Host "wixtoolset install failed, continuing"

      - name: Add WiX/NSIS to PATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $wixDir = Get-ChildItem "C:\\Program Files (x86)" -Filter "WiX Toolset v*" -Directory | Sort-Object Name -Descending | Select-Object -First 1
          if ($wixDir) { "$($wixDir.FullName)\\bin" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8 }
          $nsisBin = "C:\\Program Files (x86)\\NSIS\\Bin"
          if (Test-Path $nsisBin) { $nsisBin | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8 }

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri app
        env:
          CI: true
          TAURI_SKIP_SIGNING: "1"
          RUST_BACKTRACE: "1"
        run: npm run tauri build

      - name: Normalize Windows artifact names
        if: runner.os == 'Windows'
        shell: bash
        run: |
          SKIP_BUILD=1 bash run/package-win.sh

      - name: Upload artifacts (all platforms)
        uses: actions/upload-artifact@v4
        with:
          name: ai-magnet-assistant-${{ matrix.os }}
          if-no-files-found: warn
          retention-days: 7
          path: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm

  publish:
    name: Create GitHub Release (draft)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Zip macOS .app bundles and generate SHA256 checksums
        run: |
          cd dist
          # zip any .app directories first (spaces safe)
          find . -type d -name "*.app" -print0 | while IFS= read -r -d '' app; do
            zipName="${app}.zip"
            echo "Zipping $app -> $zipName"
            zip -r "$zipName" "$app" >/dev/null
          done
          # then compute checksums for files only (including .zip)
          find . -type f \( -name "*.msi" -o -name "*.exe" -o -name "*.dmg" -o -name "*.zip" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" \) -print0 | \
            xargs -0 sha256sum >> SHA256SUMS.txt
          cat SHA256SUMS.txt

      - name: Create GitHub Release (draft, prerelease)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: true
          generate_release_notes: true
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag_name }}
          target_commitish: ${{ github.sha }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag_name }}
          body: |
            This is a draft/pre-release generated by CI for multi-platform artifacts.
            See docs/RELEASES.md for detailed change notes.
          files: |
            dist/**/*.msi
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.zip
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/*.rpm
            dist/**/SHA256SUMS.txt

