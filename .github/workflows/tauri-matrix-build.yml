name: Tauri CI Build (Test)

on:
  workflow_dispatch:

concurrency:
  group: tauri-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Windows packaging dependencies
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y nsis || Write-Host "nsis install failed, continuing"
          choco install -y wixtoolset || Write-Host "wixtoolset install failed, continuing"

      - name: Add WiX/NSIS to PATH (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $wixDir = Get-ChildItem "C:\\Program Files (x86)" -Filter "WiX Toolset v*" -Directory | Sort-Object Name -Descending | Select-Object -First 1
          if ($wixDir) {
            "$($wixDir.FullName)\\bin" | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8
          }
          $nsisBin = "C:\\Program Files (x86)\\NSIS\\Bin"
          if (Test-Path $nsisBin) {
            $nsisBin | Out-File -FilePath $env:GITHUB_PATH -Append -Encoding utf8
          }

      - name: Show tool versions (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          where candle.exe || echo "candle not found"
          where light.exe || echo "light not found"
          where makensis.exe || echo "makensis not found"
          rustc -V
          cargo -V
          node -v
          npm -v

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri app
        env:
          CI: true
          TAURI_SKIP_SIGNING: "1"
          RUST_BACKTRACE: "1"
        run: npm run tauri build

      - name: Normalize Windows artifact names
        if: runner.os == 'Windows'
        shell: bash
        run: |
          SKIP_BUILD=1 bash run/package-win.sh

      - name: Upload artifacts (all platforms)
        uses: actions/upload-artifact@v4
        with:
          name: ai-magnet-assistant-${{ matrix.os }}
          if-no-files-found: warn
          retention-days: 7
          path: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
            src-tauri/target/release/bundle/**/*.dmg
            src-tauri/target/release/bundle/**/*.app
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.os }}
          path: |
            target/**/bundle/**/bundle.log
            src-tauri/target/**/bundle/**/bundle.log

